diff --git a/include/openthread/platform/radio.h b/include/openthread/platform/radio.h
index 78f6f3182..4e2198422 100644
--- a/include/openthread/platform/radio.h
+++ b/include/openthread/platform/radio.h
@@ -1162,6 +1162,12 @@ void otPlatRadioSetIRConfig(otInstance *aInstance, uint8_t mode);
  */
 otError otPlatRadioSetIeeeEui64(otInstance *aInstance, const otExtAddress *aIeeeEui64);
 
+/**
+ * @}
+ *
+ */
+otError otPlatRadioSetTxPowerLimit(otInstance *aInstance, uint8_t txPowerLimit);
+
 #ifdef __cplusplus
 } // end of extern "C"
 #endif
diff --git a/src/lib/spinel/radio_spinel.hpp b/src/lib/spinel/radio_spinel.hpp
index 859672cfd..c4ff31ffe 100644
--- a/src/lib/spinel/radio_spinel.hpp
+++ b/src/lib/spinel/radio_spinel.hpp
@@ -187,6 +187,18 @@ public:
      */
     otError SetIeeeEui64(const otExtAddress &aIeeeEui64);
 
+    /**
+     * @brief Set the Tx Power Limit for 15.4
+     *
+     * @param txPowerLimit
+     * txPowerLimit (0 or higher than 22), No power backoff is applied
+     * txPowerLimit = 1 to 44, force TX power back off to txPowerLimit
+     * (txPowerLimit = 0.5dBm step, TX power back off : 0.5dBm step )
+     *
+     * @return otError
+     */
+    otError SetTxPowerLimit(uint8_t txPowerLimit);
+
     /**
      * This method sets the Extended Address for address filtering.
      *
diff --git a/src/lib/spinel/radio_spinel_impl.hpp b/src/lib/spinel/radio_spinel_impl.hpp
index ac3df87d6..ad6f43cb3 100644
--- a/src/lib/spinel/radio_spinel_impl.hpp
+++ b/src/lib/spinel/radio_spinel_impl.hpp
@@ -1233,6 +1233,16 @@ exit:
     return error;
 }
 
+template <typename InterfaceType, typename ProcessContextType>
+otError RadioSpinel<InterfaceType, ProcessContextType>::SetTxPowerLimit(uint8_t txPowerLimit)
+{
+    otError error;
+    SuccessOrExit(error = Set(SPINEL_PROP_VENDOR_NXP_SET_TXPOWERLIMIT_CMD, SPINEL_DATATYPE_UINT8_S, txPowerLimit));
+
+exit:
+    return error;
+}
+
 template <typename InterfaceType, typename ProcessContextType>
 otError RadioSpinel<InterfaceType, ProcessContextType>::SetExtendedAddress(const otExtAddress &aExtAddress)
 {
diff --git a/src/lib/spinel/spinel.h b/src/lib/spinel/spinel.h
index 22398d3bc..45a3bb539 100644
--- a/src/lib/spinel/spinel.h
+++ b/src/lib/spinel/spinel.h
@@ -4813,6 +4813,7 @@ enum
     SPINEL_PROP_VENDOR_NXP_IR_CONFIG     = (SPINEL_PROP_VENDOR__BEGIN + 0x100),
     SPINEL_PROP_VENDOR_NXP_IR_CMD        = (SPINEL_PROP_VENDOR__BEGIN + 0x101),
     SPINEL_PROP_VENDOR_NXP_SET_EUI64_CMD = (SPINEL_PROP_VENDOR__BEGIN + 0x10A),
+    SPINEL_PROP_VENDOR_NXP_SET_TXPOWERLIMIT_CMD = (SPINEL_PROP_VENDOR__BEGIN + 0x10B),
 
     SPINEL_PROP_VENDOR__END   = 0x4000,
 
diff --git a/src/posix/main.c b/src/posix/main.c
index 0ac11e71c..802a053a3 100644
--- a/src/posix/main.c
+++ b/src/posix/main.c
@@ -453,6 +453,33 @@ static otError ProcessSetEui64(void *aContext, uint8_t aArgsLength, char *aArgs[
     return error;
 }
 
+static otError ProcessSetTxPowerLimit(void *aContext, uint8_t aArgsLength, char *aArgs[])
+{
+
+    otError error = OT_ERROR_INVALID_ARGS;
+
+    syslog(LOG_INFO, "SetTxPowerLimit");
+
+    if( aArgsLength == 1 )
+    {
+        uint8_t txPowerLimit = (uint8_t)atoi(aArgs[0]);
+        if((txPowerLimit>=1)&&(txPowerLimit<=22)){
+            syslog(LOG_INFO, "-> txPowerLimit : %d", txPowerLimit);
+        }else{
+            syslog(LOG_INFO, "-> txPowerLimit : default value");
+        }
+        otPlatRadioSetTxPowerLimit(aContext, txPowerLimit);
+        syslog(LOG_INFO, "SetTxPowerLimit DONE");
+        error = OT_ERROR_NONE;
+    }
+    else
+    {
+        syslog(LOG_INFO, "SetTxPowerLimit FAILED! Invalid input arg");
+    }
+
+    return error;
+}
+
 static const otCliCommand kCommands[] = {
 #if !OPENTHREAD_POSIX_CONFIG_DAEMON_ENABLE
     {"exit", ProcessExit},
@@ -461,6 +488,7 @@ static const otCliCommand kCommands[] = {
     {"ircfg", ProcessIRConfig},    //=> OutOfBand Independent Reset Configuration ircfg <1> means OOB mode
     {"ircmd", ProcessIRCmd},       //=> InBand Independent Reset command
     {"seteui64", ProcessSetEui64}, //=> Set ieee.802.15.4 MAC Address
+    {"txpwrlimit", ProcessSetTxPowerLimit}, //=> Set TX power limit for 15.4
 };
 
 int main(int argc, char *argv[])
diff --git a/src/posix/platform/radio.cpp b/src/posix/platform/radio.cpp
index a295bf8e5..5dc6e24e7 100644
--- a/src/posix/platform/radio.cpp
+++ b/src/posix/platform/radio.cpp
@@ -759,6 +759,12 @@ otError otPlatRadioSetIeeeEui64(otInstance *aInstance, const otExtAddress *aIeee
     return sRadioSpinel.SetIeeeEui64(*aIeeeEui64);
 }
 
+otError otPlatRadioSetTxPowerLimit(otInstance *aInstance, uint8_t txPowerLimit)
+{
+    OT_UNUSED_VARIABLE(aInstance);
+    return sRadioSpinel.SetTxPowerLimit(txPowerLimit);
+}
+
 const otRadioSpinelMetrics *otSysGetRadioSpinelMetrics(void) { return sRadioSpinel.GetRadioSpinelMetrics(); }
 
 const otRcpInterfaceMetrics *otSysGetRcpInterfaceMetrics(void)
